####
# UCT specific (Default Opencast Properties are fine for most encoding profiles)
#
# Profile definitions for the encoding service. UCT specific
#
# In order to understand how to configure a format, take a look a the
# documentation below:
#
# profile.<format>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# profile.<format>.output:
#     Type of the distribution format.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
#
# profile.<format>.suffix:
#     Extension that will be appended to the download.
#
# profile.<format>.mimetype:
#     Mime type used to provide proper content types.
#
# profile.<format>.input:
#     Track types for which this format is applicable.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
##

# Composite
#   This profile is used for the composite workflow operation which puts
#   several input videos on a single canvas. The new video is put into an
#   Matroska container and encoded using the lossless flac encoder and libx264
#   with high quality settings.  You can change the value of -preset (i.e.
#   faster) if you want this to be faster (it will cost you space) and the
#   quality (-crf).
profile.uct-composite.http.name = composite
profile.uct-composite.http.input = visual
profile.uct-composite.http.output = visual
profile.uct-composite.http.suffix = -compound.mkv
profile.uct-composite.http.mimetype = video/x-matroska
#2.2-0:profile.composite.http.ffmpeg.command = -i #{in.video.path} -filter:v #{compositeCommand} -c:a flac -c:v libx264 -crf 10 -preset fast #{out.dir}/#{out.name}#{out.suffix}
profile.uct-composite.http.ffmpeg.command = -i #{in.video.path} -filter:v #{compositeCommand} -c:a aac -strict -2 -c:v libx264 -crf 23 -preset veryfast #{out.dir}/#{out.name}#{out.suffix}
profile.uct-composite.http.jobload = 3.0

# Encoding profile for parallel multi-quality encoding
profile.feed-parallel.http.name = parallel video encoding
profile.feed-parallel.http.input = visual
profile.feed-parallel.http.output = visual
profile.feed-parallel.http.mimetype = video/mp4
profile.feed-parallel.http.suffix.medium-quality = -480p.mp4
profile.feed-parallel.http.suffix.high-quality = -720p.mp4
profile.feed-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset slow -crf 25 -r 25 -pix_fmt yuv420p -profile:v baseline -tune film -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 22050 -ac 1 -ab 128k #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset medium -crf 23 -r 25 -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.feed-parallel.http.jobload = 3.0

#   \
#  -c:v libx264 -filter:v yadif,scale=-2:1080 -preset medium -crf 23 -r 25 -pix_fmt yuv420p -tune film -movflags faststart \
#  -c:a aac -ar 44100 -ab 192k #{out.dir}/#{out.name}#{out.suffix.hd-quality}

# Distribution format definition for mpeg4 presenter/presentation/presentation download
profile.feed-mp4-360.http.name = MP4-360p
profile.feed-mp4-360.http.input = visual
profile.feed-mp4-360.http.output = visual
profile.feed-mp4-360.http.suffix = -360p.mp4
profile.feed-mp4-360.http.mimetype = video/mp4
profile.feed-mp4-360.http.ffmpeg.command = -i #{in.video.path} -vf scale='-1:360' -c:v libx264 -preset slow -crf 30 -r 25 -profile:v baseline -level 3.0 -pix_fmt yuv420p -b:v 250k -maxrate 250k -bufsize 500k -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.feed-mp4-360.http.jobload = 2.5

profile.feed-mp4-480.http.name = MP4-480p
profile.feed-mp4-480.http.input = visual
profile.feed-mp4-480.http.output = visual
profile.feed-mp4-480.http.suffix = -480p.mp4
profile.feed-mp4-480.http.mimetype = video/mp4
profile.feed-mp4-480.http.ffmpeg.command = -i #{in.video.path} -vf scale='-1:480' -c:v libx264 -preset slow -crf 30 -r 25 -profile: high -pix_fmt yuv420p -b:v 500k -maxrate 500k -bufsize 1000k -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.feed-mp4-480.http.jobload = 2.5

# same as mp4-hd.http
profile.feed-mp4-720.http.name = MP4-720p
profile.feed-mp4-720.http.input = visual
profile.feed-mp4-720.http.output = visual
profile.feed-mp4-720.http.suffix = -720p.mp4
profile.feed-mp4-720.http.mimetype = video/mp4
profile.feed-mp4-720.http.ffmpeg.command = -i #{in.video.path} -c:v libx264 -filter:v yadif,scale=-2:720 -preset medium -crf 23 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film  -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.feed-mp4-720.http.jobload = 2.5

# same as mp4-vga-hd
profile.feed-mp4-1080.http.name = MP4-1080p
profile.feed-mp4-1080.http.input = visual
profile.feed-mp4-1080.http.output = visual
profile.feed-mp4-1080.http.suffix = -1080p.mp4
profile.feed-mp4-1080.http.mimetype = video/mp4
profile.feed-mp4-1080.http.ffmpeg.command = -i #{in.video.path} -c:v libx264 -preset slower -crf 30 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.feed-mp4-1080.http.jobload = 2.5

# similar to mp3.http
profile.feed-mp3.http.name = audio/mp3 download
profile.feed-mp3.http.input = audio
profile.feed-mp3.http.output = audio
profile.feed-mp3.http.suffix = .mp3
profile.feed-mp3.http.mimetype = audio/mp3
profile.feed-mp3.http.ffmpeg.command = -strict unofficial -analyzeduration 30000000 -i #{in.video.path} -ar 44100 -ab 192000 -vn -f mp3 #{out.dir}/#{out.name}#{out.suffix}
profile.feed-mp3.http.jobload = 1.5

# similar to uct-mp4-preview.dual.http
profile.mp4-download.dual.http.name = download video video (picture-by-picture)
profile.mp4-download.dual.http.input = visual
profile.mp4-download.dual.http.output = visual
profile.mp4-download.dual.http.suffix = -composite.mp4
profile.mp4-download.dual.http.mimetype = video/mp4
profile.mp4-download.dual.http.ffmpeg.command = -i #{in.video.path} #{compositeCommand} -c:v libx264 -preset medium -crf 23 -r 25 -profile:v high -pix_fmt yuv420p -tune film -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.mp4-download.dual.http.jobload = 2.5

profile.presenter-mp4-720.http.name = Presenter MP4 720p
profile.presenter-mp4-720.http.input = visual
profile.presenter-mp4-720.http.output = visual
profile.presenter-mp4-720.http.suffix = -720p.mp4
profile.presenter-mp4-720.http.mimetype = video/mp4
profile.presenter-mp4-720.http.ffmpeg.command = -i #{in.video.path} -c:v libx264 -filter:v yadif,scale=-2:720 -preset medium -crf 23 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film  -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.presenter-mp4-720.http.jobload = 2.5

####################################################################################
# Parallel Encoding

profile.mp4-other.http.name = Presentation MP4 <480
profile.mp4-other.http.input = visual
profile.mp4-other.http.output = visual
profile.mp4-other.http.mimetype = video/mp4
profile.mp4-other.http.suffix = .mp4
profile.mp4-other.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -preset medium -crf 23 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film  -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.mp4-other.http.jobload = 2.5

profile.mp4-480.http.name = Presentation MP4 480
profile.mp4-480.http.input = visual
profile.mp4-480.http.output = visual
profile.mp4-480.http.mimetype = video/mp4
profile.mp4-480.http.suffix = -480p.mp4
profile.mp4-480.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset medium -crf 23 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film  -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.mp4-480.http.jobload = 2.5

profile.mp4-480-720-parallel.http.name = Presentation MP4 480 and 720p
profile.mp4-480-720-parallel.http.input = visual
profile.mp4-480-720-parallel.http.output = visual
profile.mp4-480-720-parallel.http.mimetype = video/mp4
profile.mp4-480-720-parallel.http.suffix.medium-quality = -480p.mp4
profile.mp4-480-720-parallel.http.suffix.high-quality = -720p.mp4
profile.mp4-480-720-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset medium -crf 25 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 44100 -ac 1 -ab 128k #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset medium -crf 23 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.mp4-norm-480-720-parallel.http.jobload = 3.0

profile.mp4-480-720-1080-parallel.http.name = Presentation MP4 480, 720p and 1080 [normalized]
profile.mp4-480-720-1080-parallel.http.input = visual
profile.mp4-480-720-1080-parallel.http.output = visual
profile.mp4-480-720-1080-parallel.http.mimetype = video/mp4
profile.mp4-480-720-1080-parallel.http.suffix.low-quality = -480p.mp4
profile.mp4-480-720-1080-parallel.http.suffix.medium-quality = -720p.mp4
profile.mp4-480-720-1080-parallel.http.suffix.high-quality = -1080p.mp4
profile.mp4-480-720-1080-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 44100 -ac 1 -ab 128k #{out.dir}/#{out.name}#{out.suffix.low-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:1080 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.mp4-norm-480-720-1080-parallel.http.jobload = 3.0

profile.mp4-norm-other.http.name = Presentation MP4 <480 [normalized]
profile.mp4-norm-other.http.input = visual
profile.mp4-norm-other.http.output = visual
profile.mp4-norm-other.http.mimetype = video/mp4
profile.mp4-norm-other.http.suffix = .mp4
profile.mp4-norm-other.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -preset medium -crf 23 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film  -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix}
profile.mp4-norm-other.http.jobload = 2.5

profile.mp4-norm-480.http.name = Presentation MP4 480 [normalized]
profile.mp4-norm-480.http.input = visual
profile.mp4-norm-480.http.output = visual
profile.mp4-norm-480.http.mimetype = video/mp4
profile.mp4-norm-480.http.suffix = -480p.mp4
profile.mp4-norm-480.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset medium -crf 23 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune film  -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix}
profile.mp4-norm-480.http.jobload = 2.5

profile.mp4-norm-480-720-parallel.http.name = Presentation MP4 480 and 720p [normalized]
profile.mp4-norm-480-720-parallel.http.input = visual
profile.mp4-norm-480-720-parallel.http.output = visual
profile.mp4-norm-480-720-parallel.http.mimetype = video/mp4
profile.mp4-norm-480-720-parallel.http.suffix.medium-quality = -480p.mp4
profile.mp4-norm-480-720-parallel.http.suffix.high-quality = -720p.mp4
profile.mp4-norm-480-720-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 44100 -ac 1 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.mp4-norm-480-720-parallel.http.jobload = 3.0

profile.mp4-norm-480-720-1080-parallel.http.name = Presentation MP4 480, 720p and 1080 [normalized]
profile.mp4-norm-480-720-1080-parallel.http.input = visual
profile.mp4-norm-480-720-1080-parallel.http.output = visual
profile.mp4-norm-480-720-1080-parallel.http.mimetype = video/mp4
profile.mp4-norm-480-720-1080-parallel.http.suffix.low-quality = -480p.mp4
profile.mp4-norm-480-720-1080-parallel.http.suffix.medium-quality = -720p.mp4
profile.mp4-norm-480-720-1080-parallel.http.suffix.high-quality = -1080p.mp4
profile.mp4-norm-480-720-1080-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 44100 -ac 1 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix.low-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:1080 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k -af loudnorm=I=-25:TP=-1.5 #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.mp4-norm-480-720-1080-parallel.http.jobload = 3.0

profile.presenter-mp4-parallel.http.name = Presenter MP4 480 and 720p
profile.presenter-mp4-parallel.http.input = visual
profile.presenter-mp4-parallel.http.output = visual
profile.presenter-mp4-parallel.http.mimetype = video/mp4
profile.presenter-mp4-parallel.http.suffix.medium-quality = -480p.mp4
profile.presenter-mp4-parallel.http.suffix.high-quality = -720p.mp4
profile.presenter-mp4-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset medium -crf 25 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 44100 -ac 1 -ab 128k #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset medium -crf 23 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune film -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.presenter-mp4-parallel.http.jobload = 3.0

profile.presentation-mp4-720.http.name = Presentation MP4 720p
profile.presentation-mp4-720.http.input = visual
profile.presentation-mp4-720.http.output = visual
profile.presentation-mp4-720.http.suffix = -720p.mp4
profile.presentation-mp4-720.http.mimetype = video/mp4
profile.presentation-mp4-720.http.ffmpeg.command = -i #{in.video.path} -c:v libx264 -filter:v yadif,scale=-2:720 -preset slower -crf 30 -r 25 -profile:v high -level 4.0  -pix_fmt yuv420p -tune animation -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 96k #{out.dir}/#{out.name}#{out.suffix}
profile.presentation-mp4-720.http.jobload = 2.5

profile.presentation-mp4-parallel.http.name = Presentation MP4 480 and 720p
profile.presentation-mp4-parallel.http.input = visual
profile.presentation-mp4-parallel.http.output = visual
profile.presentation-mp4-parallel.http.mimetype = video/mp4
profile.presentation-mp4-parallel.http.suffix.medium-quality = -480p.mp4
profile.presentation-mp4-parallel.http.suffix.high-quality = -720p.mp4
profile.presentation-mp4-parallel.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -filter:v yadif,scale=-2:480 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune animation -movflags faststart -b:v 500k -maxrate 500k -bufsize 1000k \
  -c:a aac -strict -2 -ar 44100 -ac 1 -ab 96k #{out.dir}/#{out.name}#{out.suffix.medium-quality} \
  -c:v libx264 -filter:v yadif,scale=-2:720 -preset slower -crf 30 -r 25 -pix_fmt yuv420p -profile:v high -level 4.0  -pix_fmt yuv420p -tune animation -movflags faststart \
  -c:a aac -strict -2 -ar 44100 -ab 96k #{out.dir}/#{out.name}#{out.suffix.high-quality}
profile.presentation-mp4-parallel.http.jobload = 3.0

####################################################################################
# Copy video to another stream
profile.copy-raw.video.name = copy video
profile.copy-raw.video.input = stream
profile.copy-raw.video.output = visual
profile.copy-raw.video.suffix = .#{in.video.suffix}
profile.copy-raw.video.ffmpeg.command = -i #{in.video.path} -vcodec copy -acodec copy #{out.dir}/#{out.name}#{out.suffix}
profile.copy-raw.video.jobload = 1.5

# Copy video to another stream
profile.copy-raw.audio.name = copy video
profile.copy-raw.audio.input = audio
profile.copy-raw.audio.output = audio
profile.copy-raw.audio.suffix = .#{in.video.suffix}
profile.copy-raw.audio.ffmpeg.command = -i #{in.video.path} -acodec copy #{out.dir}/#{out.name}#{out.suffix}
profile.copy-raw.audio.jobload = 1.0

# Copy audio to another flavor - #{in.video.suffix}
profile.copy.audio.name = copy audio
profile.copy.audio.input = audio
profile.copy.audio.output = audio
profile.copy.audio.suffix = .flac
profile.copy.audio.mimetype = audio/flac
profile.copy.audio.ffmpeg.command = -i #{in.video.path} #{out.dir}/#{out.name}#{out.suffix}
profile.copy.audio.jobload = 1.0

# Copy video and audio to another flavor - silence audio - #{in.video.suffix}
profile.copy.stream.name = copy video and audio
profile.copy.stream.input = visual
profile.copy.stream.output = visual
profile.copy.stream.suffix = .mkv
profile.copy.stream.mimetype = video/x-matroska
profile.copy.stream.ffmpeg.command = -f lavfi -i anullsrc -i #{in.video.path} -shortest -c:v copy -c:a aac -strict -2 -map 0:a -map 1:v #{out.dir}/#{out.name}#{out.suffix}
profile.copy.stream.jobload = 1.5

# for-audio.only
profile.for-audio.only.name = for audio only
profile.for-audio.only.input = audio
profile.for-audio.only.output = visual
profile.for-audio.only.suffix = .mkv
profile.for-audio.only.mimetype = video/x-matroska
profile.for-audio.only.ffmpeg.command = -loop 1 -i /opt/opencast/etc/branding/no_audio.png -i #{in.video.path} -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.for-audio.only.jobload = 1.5

# Mux one audio and one video stream
#   This command will take two files (video and audio) and mux the contained
#   streams.  The container format used is the same as it was for the source
#   video file. The streams will not be re-encoded, but if the duration of both
#   streams differ, the longer one will be cut.
profile.uct-av.work.name = mux audio and video
profile.uct-av.work.input = stream
profile.uct-av.work.output = visual
profile.uct-av.work.suffix = -work.mkv
profile.uct-av.work.mimetype = video/x-matroska
profile.uct-av.work.ffmpeg.command = -i #{in.video.path} -i #{in.audio.path} -shortest -acodec copy -r:v 25 -c:v libx264 -preset veryfast -pix_fmt yuv420p -crf 18 #{out.dir}/#{out.name}#{out.suffix}
profile.uct-av.work.jobload = 2.5

#1.6 profile.mux-av.work.ffmpeg.command = -i #{in.video.path} -i #{in.audio.path} -shortest -acodec copy -r:v 25 -c:v libx264 -preset veryfast -pix_fmt yuv420p -crf 18 #{out.dir}/#{out.name}#{out.suffix}

# Mux one audio and one video stream
#   This command will take two files (video and audio) and mux the contained
#   streams.  The container format used is the same as it was for the source
#   video file. The streams will not be re-encoded, but if the duration of both
#   streams differ, the longer one will be cut.
profile.uct-mux-preview.work.name = mux audio and video
profile.uct-mux-preview.work.input = stream
profile.uct-mux-preview.work.output = visual
profile.uct-mux-preview.work.suffix = -preview.mp4
profile.uct-mux-preview.work.mimetype = video/mp4
profile.uct-mux-preview.work.ffmpeg.command = -i #{in.video.path} -i #{in.audio.path} -shortest -c:v copy -r:v 25 -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.uct-mux-preview.work.jobload = 2.5

# Audio only (strip video)
#   This command will copy the audio streams into a new container. The
#   container type will be the same as it was used for the source video.
profile.uct-audio-only.work.name = audio only
profile.uct-audio-only.work.input = visual
profile.uct-audio-only.work.output = audio
profile.uct-audio-only.work.suffix = -work.flac
profile.uct-audio-only.work.mimetype = audio/flac
profile.uct-audio-only.work.ffmpeg.command = -i #{in.video.path} -c:a copy -vn #{out.dir}/#{out.name}#{out.suffix}
profile.uct-audio-only.work.jobload = 1.5

# Video only (strip audio)
#   This command will copy the video streams into a new container. The
#   container type will be the same as it was used for the source video.
profile.uct-video-only.work.name = video only
profile.uct-video-only.work.input = visual
profile.uct-video-only.work.output = visual
profile.uct-video-only.work.suffix = -work.mkv
profile.uct-video-only.work.mimetype = video/x-matroska
profile.uct-video-only.work.ffmpeg.command = -i #{in.video.path} -c:v copy -an #{out.dir}/#{out.name}#{out.suffix}
profile.uct-video-only.work.jobload = 1.5

# TESTING
profile.uct-mux-test.work.name = mux audio and video test
profile.uct-mux-test.work.input = stream
profile.uct-mux-test.work.output = visual
profile.uct-mux-test.work.suffix = -preview.mkv
profile.uct-mux-test.work.mimetype = video/x-matroska
profile.uct-mux-test.work.ffmpeg.command = -i #{in.video.path} -i #{in.audio.path} -shortest -acodec copy -r:v 25 -c:v libx264 -filter:v yadif,scale=-2:720 -preset veryfast -pix_fmt yuv420p -crf 18 #{out.dir}/#{out.name}#{out.suffix}
#profile.mux-av.work.     ffmpeg.command = -i #{in.video.path} -i #{in.audio.path} -shortest -acodec copy -r:v 25 -c:v libx264 -preset veryfast -pix_fmt yuv420p -crf 18 #{out.dir}/#{out.name}#{out.suffix}
profile.uct-mux-test.work.jobload = 1.5


# Mux one audio and one video stream
#   This command will take two files (video and audio) and mux the contained
#   streams.  The container format used is the same as it was for the source
#   video file. The streams will not be re-encoded, but if the duration of both
#   streams differ, the longer one will be cut.
profile.uct-vsync.work.name = audio and video
profile.uct-vsync.work.input = stream
profile.uct-vsync.work.output = visual
profile.uct-vsync.work.suffix = -work.mkv
profile.uct-vsync.work.mimetype = video/x-matroska
profile.uct-vsync.work.ffmpeg.command = -i #{in.video.path} -shortest -acodec copy -r:v 25 -c:v libx264 -preset veryfast -pix_fmt yuv420p -crf 18 -vsync 1 -framerate 25 #{out.dir}/#{out.name}#{out.suffix}
profile.uct-vsync.work.jobload = 2.5


####################################################################################
# NEW
# -af loudnorm=I=-25:TP=-1.5

profile.adaptive-parallel-2160-480.http.name = Parallel encoding MP4 - 480, 720, 1080, 2160
profile.adaptive-parallel-2160-480.http.input = visual
profile.adaptive-parallel-2160-480.http.output = visual
profile.adaptive-parallel-2160-480.http.jobload = 3.0
profile.adaptive-parallel-2160-480.http.suffix.2160p-quality = -2160p.mp4
profile.adaptive-parallel-2160-480.http.suffix.1080p-quality = -1080p.mp4
profile.adaptive-parallel-2160-480.http.suffix.720p-quality = -720p.mp4
profile.adaptive-parallel-2160-480.http.suffix.480p-quality = -480p.mp4
profile.adaptive-parallel-2160-480.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -crf 23 -maxrate 10000k -bufsize 10000k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,2160)',fps=fps=25 \
    -c:a aac -b:a 128k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.2160p-quality} \
  -c:v libx264 -crf 23 -maxrate 4000k -bufsize 8000k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,1080)',fps=fps=25 \
    -c:a aac -b:a 128k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.1080p-quality} \
  -c:v libx264 -crf 23 -maxrate 1200k -bufsize 2400k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,720)',fps=fps=25 \
    -c:a aac -b:a 128k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.720p-quality} \
  -c:v libx264 -crf 23 -maxrate 800k -bufsize 800k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,480)',fps=fps=25 \
    -c:a aac -b:a 96k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.480p-quality}

profile.adaptive-parallel-1080-480.http.name = Parallel encoding MP4 - 480, 720, 1080
profile.adaptive-parallel-1080-480.http.input = visual
profile.adaptive-parallel-1080-480.http.output = visual
profile.adaptive-parallel-1080-480.http.jobload = 3.0
profile.adaptive-parallel-1080-480.http.suffix.1080p-quality = -1080p.mp4
profile.adaptive-parallel-1080-480.http.suffix.720p-quality = -720p.mp4
profile.adaptive-parallel-1080-480.http.suffix.480p-quality = -480p.mp4
profile.adaptive-parallel-1080-480.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -crf 23 -maxrate 4000k -bufsize 8000k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,1080)',fps=fps=25 \
    -c:a aac -b:a 128k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.1080p-quality} \
  -c:v libx264 -crf 23 -maxrate 1200k -bufsize 2400k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,720)',fps=fps=25 \
    -c:a aac -b:a 128k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.720p-quality} \
  -c:v libx264 -crf 23 -maxrate 800k -bufsize 800k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,480)',fps=fps=25 \
    -c:a aac -b:a 96k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.480p-quality}

profile.adaptive-parallel-720-480.http.name = Parallel encoding MP4 - 480, 720
profile.adaptive-parallel-720-480.http.input = visual
profile.adaptive-parallel-720-480.http.output = visual
profile.adaptive-parallel-720-480.http.jobload = 3.0
profile.adaptive-parallel-720-480.http.suffix.1080p-quality = -1080p.mp4
profile.adaptive-parallel-720-480.http.suffix.720p-quality = -720p.mp4
profile.adaptive-parallel-720-480.http.suffix.480p-quality = -480p.mp4
profile.adaptive-parallel-720-480.http.ffmpeg.command = -i #{in.video.path} \
  -c:v libx264 -crf 23 -maxrate 1200k -bufsize 2400k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,720)',fps=fps=25 \
    -c:a aac -b:a 128k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.720p-quality} \
  -c:v libx264 -crf 23 -maxrate 800k -bufsize 800k -profile:v high -level 4.0 -pix_fmt yuv420p \
    -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart -vf scale='-2:min(ih\\,480)',fps=fps=25 \
    -c:a aac -b:a 96k -ac 1 -f mp4 #{out.dir}/#{out.name}#{out.suffix.480p-quality}

profile.uct-mp4-preview.http.name = preview video
profile.uct-mp4-preview.http.input = visual
profile.uct-mp4-preview.http.output = visual
profile.uct-mp4-preview.http.suffix = -preview.mp4
profile.uct-mp4-preview.http.ffmpeg.command = -i #{in.video.path} -c:v libx264 -filter:v yadif,scale=-2:360 -preset veryfast -crf 23 -profile:v baseline -pix_fmt yuv420p -tune film  -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.uct-mp4-preview.http.jobload = 2.5

profile.uct-mp4-preview.dual.http.name = preview video (picture-by-picture)
profile.uct-mp4-preview.dual.http.input = visual
profile.uct-mp4-preview.dual.http.output = visual
profile.uct-mp4-preview.dual.http.suffix = -preview-composite.mp4
profile.uct-mp4-preview.dual.http.ffmpeg.command = -i #{in.video.path} #{compositeCommand} -c:v libx264 -preset veryfast -crf 23 -profile:v baseline -pix_fmt yuv420p -tune film -movflags faststart -c:a aac -strict -2 -ar 44100 -ab 128k #{out.dir}/#{out.name}#{out.suffix}
profile.uct-mp4-preview.dual.http.jobload = 2.5
